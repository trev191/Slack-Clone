#
# CSE183 Assignment 8 Backend
#

# Sources Used:
#   Variable Types:
#     https://swagger.io/docs/specification/data-models/data-types/
#   Request Body Types:
#     https://swagger.io/docs/specification/2-0/describing-request-body/
#   Media Types:
#     https://swagger.io/docs/specification/media-types/

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dms:
    get:
      description: Return all unique DMstreams, along with messages within each stream.
      responses:
        200:
          description: Success. Retrieved all dmstreams.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllDMs'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /workspace:
    get:
      description: Return all workspace names, along with channels within each workspace.
      responses:
        200:
          description: Success. Retrieved all workspaces and channels.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllWorkspacesAndChannels'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /channel/{id}:
    get:
      description: Return all threads in a channel, along with all their replies.
      parameters:
      - name: id
        in: path
        description: UUID identifying the channel ID to query.
        required: true
        schema:
            type: string
            format: uuid
      responses:
        200:
          description: Success. Retrieved threads and replies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllDMs'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Post a new thread message in a channel.
      parameters:
      - name: id
        in: path
        description: UUID identifying the channel the post the new thread to
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Content of new thread to post. Modify "Message Content" only.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageContent'
      responses:
        201:
          description: Success. New thread created and posted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reply/{id}:
    post:
      description: Post a reply to a DM or Thread.
      parameters:
      - name: id
        in: path
        description: UUID of the first message in DM or thread.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Content of new thread to post. Modify "Message Content" only.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageContent'
      responses:
        201:
          description: Success. New thread created and posted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      


components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string

    AllDMs:
      type: array
      items:
        $ref: '#/components/schemas/SingleDMStream'
    
    SingleDMStream:
      type: object
      properties:
        otherUser:
          type: string
          default: 'name'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
      required:
        - otherUser
        - messages

    AllWorkspacesAndChannels:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    
    Workspace:
      type: object
      properties:
        workspaceName:
          type: string
          default: 'workspace name'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
      required:
        - workspaceName
        - channels

    Channel:
      type: object
      properties:
        channelName:
          type: string
          default: 'channel name'
        channelId:
          type: string
          format: uuid
      required:
        - channelName
        - channelId

    Message:
      type: object
      properties:
        from:
          type: string
          default: 'name'
        content:
          type: string
          default: 'content'
        time:
          type: string
        id:
          type: string
          format: uuid
      required:
      - from
      - content
      - time
      - id

    MessageContent:
      type: object
      properties:
        content:
          type: string
          default: 'Message Content'
      required:
      - content
    
    
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []         # use the same name as above